<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 		
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd  
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd"
	default-autowire="byName">

	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
				<value>classpath:jdbc.properties</value>
				<value>classpath:redis-configration.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>
	
	<bean class="com.net263.framework.config.PropertyResourceReader">
		<property name="propertyResourceConfigurer" ref="propertyPlaceholderConfigurer"/>
	</bean>

	<context:annotation-config />
	<context:component-scan base-package="com.net263" />
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<bean id="freeMarker" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">     
  		<property name="templateLoaderPath" value="WEB-INF/mailTemplate/"/><!--指定模板文件目录-->       
  		<property name="freemarkerSettings"><!-- 设置FreeMarker环境属性-->       
      	<props>     
          <prop key="template_update_delay">1800</prop><!--刷新模板的周期，单位为秒-->       
          <prop key="default_encoding">UTF-8</prop><!--模板的编码格式 -->     
          <prop key="locale">zh_CN</prop><!-- 本地化设置-->     
      	</props>     
  		</property>     
	</bean>

	<!-- 数据源配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${datasource.driverClassName}" />
		<property name="jdbcUrl" value="${datasource.url}" />
		<property name="user" value="${datasource.user}" />
		<property name="password" value="${datasource.password}" />
		<property name="minPoolSize" value="${datasource.minPoolSize}" />
		<property name="maxPoolSize" value="${datasource.maxPoolSize}" />
		<property name="maxIdleTime" value="${datasource.maxIdleTime}" />
		<property name="acquireIncrement" value="${datasource.acquireIncrement}" />
		<property name="maxStatements" value="${datasource.maxStatements}" />
		<property name="initialPoolSize" value="${datasource.initialPoolSize}" />
		<property name="idleConnectionTestPeriod" value="${datasource.idleConnectionTestPeriod}" />
		<property name="acquireRetryAttempts" value="${datasource.acquireRetryAttempts}" />
		<property name="breakAfterAcquireFailure" value="${datasource.breakAfterAcquireFailure}" />
		<property name="testConnectionOnCheckout" value="${datasource.testConnectionOnCheckout}" />
	</bean>

	<!-- hibernate sessionFactory配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" >
			<list>
				<value>com.net263.*.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.connection.characterEncoding">${hibernate.connection.characterEncoding}</prop>
				<prop key="hibernate.connection.autocommit">${hibernate.connection.autocommit}</prop>
				<prop key="hibernate.connection.release_mode">${hibernate.connection.release_mode}</prop>
				<prop key="hibernate.autoReconnect">${hibernate.autoReconnect}</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">${hibernate.cglib.use_reflection_optimizer}</prop>
			</props>
		</property>
	</bean>
	<!-- 定义事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 配置事务注解 ，配置该注解后可以通过@Transactional注解管理事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- Spring上下文工具类 -->
	<bean id="springUtils" class="com.net263.framework.utils.ApplicationContextUtils">
		<!-- <property name="servletContextAttrs"> <map> <entry key="domainLogoPath" 
			value="${domain.logo.path}"/> </map> </property> -->
	</bean>

	<!-- 定义拦截目标，用于记录程序执行时间 -->
	<!-- Spring 可以用 AspectJ 的语法定义 Pointcut，这里拦截 service 包中的所有方法 -->
	<!-- <bean id="methodTimeAdvice" class="com.net263.framework.utils.MethodTimeAdvice" />
	<aop:config>
		<aop:pointcut id="methodTimeActionLog"
			expression="execution(* com.net263.test.controller.*.*(..))" />
		<aop:pointcut id="methodTimeServiceLog" expression="execution(* *..service..*(..))" />
		<aop:advisor pointcut-ref="methodTimeActionLog"
			advice-ref="methodTimeAdvice" />
		<aop:advisor pointcut-ref="methodTimeServiceLog"
			advice-ref="methodTimeAdvice" />
	</aop:config> -->
</beans>